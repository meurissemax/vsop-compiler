
# parsetabext.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftANDORAND_ALTOR_ALTrightNOTnonassocLOWERLOWER_EQUALGREATERGREATER_EQUALEQUALDIFFleftPLUSMINUSleftTIMESDIVrightISNULLrightPOWleftDOTAND AND_ALT ASSIGN BOOL CLASS COLON COMMA DIFF DIV DO DOT DOUBLE DOUBLE_LITERAL ELSE EQUAL EXTENDS EXTERNAL FALSE GREATER GREATER_EQUAL IDENTIFIER IF IN INLINE_COMMENT INT32 INTEGER_LITERAL ISNULL LBRACE LEFT_COMMENT LET LOWER LOWER_EQUAL LPAR MINUS NEW NON_TERMINATED_STRING_LITERAL NOT OBJECT_IDENTIFIER OPERATOR OR OR_ALT PLUS POW RBRACE RIGHT_COMMENT RPAR SEMICOLON STRING STRING_LITERAL THEN TIMES TRUE TYPE_IDENTIFIER UNIT WHILE\n        program : class program\n                | class\n        \n        class : CLASS TYPE_IDENTIFIER class_body\n              | CLASS TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class_body\n              | TYPE_IDENTIFIER class_body\n              | TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class_body\n              | CLASS class_body\n              | CLASS EXTENDS TYPE_IDENTIFIER class_body\n        \n        class_body : LBRACE class_body_aux RBRACE\n                   | LBRACE empty RBRACE\n                   | class_body_aux RBRACE\n                   | empty RBRACE\n                   | LBRACE class_body_aux\n                   | LBRACE empty\n        \n        class_body_aux : field class_body_aux\n                       | method class_body_aux\n                       | field\n                       | method\n        \n        field : OBJECT_IDENTIFIER COLON type SEMICOLON\n              | OBJECT_IDENTIFIER COLON type ASSIGN expr SEMICOLON\n              | OBJECT_IDENTIFIER COLON type\n              | OBJECT_IDENTIFIER COLON type ASSIGN expr\n        \n        method : OBJECT_IDENTIFIER LPAR formals RPAR COLON type block\n               | OBJECT_IDENTIFIER LPAR formals RPAR block\n        \n        formals : empty\n                | formal\n                | formal COMMA formals\n        \n        formal : OBJECT_IDENTIFIER COLON type\n               | OBJECT_IDENTIFIER\n        \n        block : LBRACE expr block_aux RBRACE\n        \n        block_aux : SEMICOLON expr block_aux\n                  | empty\n        \n        expr : IF expr THEN expr\n             | IF expr THEN expr ELSE expr\n             | IF expr expr\n             | IF expr expr ELSE expr\n        \n        expr : WHILE expr DO expr\n             | WHILE expr expr\n        \n        expr : LET OBJECT_IDENTIFIER COLON type IN expr\n             | LET OBJECT_IDENTIFIER COLON type ASSIGN expr IN expr\n             | LET OBJECT_IDENTIFIER IN expr\n             | LET OBJECT_IDENTIFIER ASSIGN expr IN expr\n        \n        expr : OBJECT_IDENTIFIER ASSIGN expr\n        \n        expr : NOT expr\n             | MINUS expr\n             | ISNULL expr\n        \n        expr : OBJECT_IDENTIFIER LPAR args RPAR\n             | expr DOT OBJECT_IDENTIFIER LPAR args RPAR\n        \n        expr : NEW TYPE_IDENTIFIER\n        \n        expr : OBJECT_IDENTIFIER\n        \n        expr : literal\n        \n        expr : LPAR RPAR\n        \n        expr : LPAR expr RPAR\n        \n        expr : block\n        \n        args : empty\n             | expr\n             | expr COMMA args\n        \n        integer_literal : INTEGER_LITERAL\n        \n        string_literal : STRING_LITERAL\n        \n        boolean_literal : TRUE\n                        | FALSE\n        \n        empty :\n        \n        type : TYPE_IDENTIFIER\n             | INT32\n             | DOUBLE\n             | BOOL\n             | STRING\n             | UNIT\n        \n        expr : expr AND expr\n             | expr AND_ALT expr\n             | expr OR expr\n             | expr OR_ALT expr\n             | expr EQUAL expr\n             | expr DIFF expr\n             | expr LOWER expr\n             | expr LOWER_EQUAL expr\n             | expr GREATER expr\n             | expr GREATER_EQUAL expr\n             | expr PLUS expr\n             | expr MINUS expr\n             | expr TIMES expr\n             | expr DIV expr\n             | expr POW expr\n        \n        literal : integer_literal\n                | double_literal\n                | string_literal\n                | boolean_literal\n        \n        double_literal : DOUBLE_LITERAL\n        '
    
_lr_action_items = {'CLASS':([0,2,7,9,12,13,15,17,20,21,22,23,24,25,30,31,32,33,34,35,36,37,38,39,44,45,46,51,52,61,62,63,64,65,66,68,69,70,71,72,75,79,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,139,140,144,145,146,148,150,154,160,161,162,164,166,],[3,3,-7,-62,-17,-18,-5,-3,-13,-14,-11,-12,-15,-16,-8,-9,-10,-21,-63,-64,-65,-66,-67,-68,-6,-4,-19,-50,-22,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-24,-20,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-23,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'TYPE_IDENTIFIER':([0,2,3,7,8,9,12,13,15,16,17,18,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,44,45,46,48,51,52,60,61,62,63,64,65,66,68,69,70,71,72,74,75,79,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,139,140,144,145,146,148,150,154,160,161,162,164,166,],[4,4,6,-7,19,-62,-17,-18,-5,28,-3,29,-13,-14,-11,-12,-15,-16,34,-8,-9,-10,-21,-63,-64,-65,-66,-67,-68,-6,-4,-19,34,-50,-22,104,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,34,-24,-20,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,34,-53,-23,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'$end':([1,2,5,7,9,12,13,15,17,20,21,22,23,24,25,30,31,32,33,34,35,36,37,38,39,44,45,46,51,52,61,62,63,64,65,66,68,69,70,71,72,75,79,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,139,140,144,145,146,148,150,154,160,161,162,164,166,],[0,-2,-1,-7,-62,-17,-18,-5,-3,-13,-14,-11,-12,-15,-16,-8,-9,-10,-21,-63,-64,-65,-66,-67,-68,-6,-4,-19,-50,-22,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-24,-20,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-23,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'EXTENDS':([3,4,6,],[8,16,18,]),'LBRACE':([3,4,6,19,28,29,34,35,36,37,38,39,47,49,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,106,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[9,9,9,9,9,9,-63,-64,-65,-66,-67,-68,67,67,-50,67,67,67,67,67,67,-51,-54,-84,-85,-86,-87,67,-58,-88,-59,-60,-61,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-44,-45,-46,-52,-49,67,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,67,67,-38,67,67,67,-53,67,-47,67,67,67,-33,-45,-37,-41,-30,-36,67,67,67,67,-48,-34,-39,-42,67,-40,]),'RBRACE':([3,4,6,9,10,11,12,13,19,20,21,24,25,28,29,33,34,35,36,37,38,39,46,51,52,61,62,63,64,65,66,68,69,70,71,72,75,79,99,100,101,102,104,105,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,136,138,139,140,144,145,146,148,150,151,154,159,160,161,162,164,166,],[-62,-62,-62,-62,22,23,-17,-18,-62,31,32,-15,-16,-62,-62,-21,-63,-64,-65,-66,-67,-68,-19,-50,-22,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-24,-20,-44,-45,-46,-52,-49,-62,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,150,-32,-23,-47,-33,-45,-37,-41,-30,-62,-36,-31,-48,-34,-39,-42,-40,]),'OBJECT_IDENTIFIER':([3,4,6,9,12,13,19,27,28,29,33,34,35,36,37,38,39,46,47,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,139,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[14,14,14,14,14,14,14,40,14,14,-21,-63,-64,-65,-66,-67,-68,-19,51,40,-50,-22,51,51,98,51,51,51,51,-51,-54,-84,-85,-86,-87,51,-58,-88,-59,-60,-61,-24,51,51,-20,111,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,51,51,-38,51,51,51,-53,51,-23,-47,51,51,51,-33,-45,-37,-41,-30,-36,51,51,51,51,-48,-34,-39,-42,51,-40,]),'COLON':([14,40,49,98,],[26,48,74,132,]),'LPAR':([14,47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[27,59,78,59,59,59,59,59,59,-51,-54,-84,-85,-86,-87,59,-58,-88,-59,-60,-61,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-44,-45,-46,-52,-49,-43,142,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,59,59,-38,59,59,59,-53,59,-47,59,59,59,-33,-45,-37,-41,-30,-36,59,59,59,59,-48,-34,-39,-42,59,-40,]),'INT32':([26,48,74,132,],[35,35,35,35,]),'DOUBLE':([26,48,74,132,],[36,36,36,36,]),'BOOL':([26,48,74,132,],[37,37,37,37,]),'STRING':([26,48,74,132,],[38,38,38,38,]),'UNIT':([26,48,74,132,],[39,39,39,39,]),'RPAR':([27,34,35,36,37,38,39,40,41,42,43,50,51,59,61,62,63,64,65,66,68,69,70,71,72,73,76,78,99,100,101,102,103,104,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,141,142,144,145,146,148,150,152,153,154,160,161,162,164,166,],[-62,-63,-64,-65,-66,-67,-68,-29,49,-25,-26,-62,-50,102,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-28,-27,-62,-44,-45,-46,-52,135,-49,-43,140,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-62,-62,-33,-45,-37,-41,-30,-57,160,-36,-48,-34,-39,-42,-40,]),'SEMICOLON':([33,34,35,36,37,38,39,51,52,61,62,63,64,65,66,68,69,70,71,72,99,100,101,102,104,105,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,150,151,154,160,161,162,164,166,],[46,-63,-64,-65,-66,-67,-68,-50,79,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-44,-45,-46,-52,-49,137,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-33,-45,-37,-41,-30,137,-36,-48,-34,-39,-42,-40,]),'ASSIGN':([33,34,35,36,37,38,39,51,98,147,],[47,-63,-64,-65,-66,-67,-68,77,134,157,]),'COMMA':([34,35,36,37,38,39,40,43,51,61,62,63,64,65,66,68,69,70,71,72,73,99,100,101,102,104,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,150,154,160,161,162,164,166,],[-63,-64,-65,-66,-67,-68,-29,50,-50,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-28,-44,-45,-46,-52,-49,-43,141,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'IN':([34,35,36,37,38,39,51,61,62,63,64,65,66,68,69,70,71,72,98,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,147,148,149,150,154,160,161,162,163,164,166,],[-63,-64,-65,-66,-67,-68,-50,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,133,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-33,-45,-37,156,-41,158,-30,-36,-48,-34,-39,165,-42,-40,]),'IF':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[53,-50,53,53,53,53,53,53,-51,-54,-84,-85,-86,-87,53,-58,-88,-59,-60,-61,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,53,53,-38,53,53,53,-53,53,-47,53,53,53,-33,-45,-37,-41,-30,-36,53,53,53,53,-48,-34,-39,-42,53,-40,]),'WHILE':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[54,-50,54,54,54,54,54,54,-51,-54,-84,-85,-86,-87,54,-58,-88,-59,-60,-61,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,54,54,-38,54,54,54,-53,54,-47,54,54,54,-33,-45,-37,-41,-30,-36,54,54,54,54,-48,-34,-39,-42,54,-40,]),'LET':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[55,-50,55,55,55,55,55,55,-51,-54,-84,-85,-86,-87,55,-58,-88,-59,-60,-61,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,55,55,-38,55,55,55,-53,55,-47,55,55,55,-33,-45,-37,-41,-30,-36,55,55,55,55,-48,-34,-39,-42,55,-40,]),'NOT':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[56,-50,56,56,56,56,56,56,-51,-54,-84,-85,-86,-87,56,-58,-88,-59,-60,-61,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,56,56,-38,56,56,56,-53,56,-47,56,56,56,-33,-45,-37,-41,-30,-36,56,56,56,56,-48,-34,-39,-42,56,-40,]),'MINUS':([47,51,52,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,149,150,151,154,155,156,157,158,160,161,162,163,164,165,166,],[57,-50,92,57,57,57,57,57,57,-51,-54,-84,-85,-86,-87,57,-58,-88,-59,-60,-61,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,129,129,92,-45,-46,-52,92,-49,92,92,92,92,92,92,92,92,92,92,92,92,92,-79,-80,-81,-82,-83,92,57,57,92,57,57,57,-53,57,-47,57,57,57,92,-45,92,92,92,-30,92,92,57,57,57,57,-48,92,92,92,92,57,92,]),'ISNULL':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[58,-50,58,58,58,58,58,58,-51,-54,-84,-85,-86,-87,58,-58,-88,-59,-60,-61,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,58,58,-38,58,58,58,-53,58,-47,58,58,58,-33,-45,-37,-41,-30,-36,58,58,58,58,-48,-34,-39,-42,58,-40,]),'NEW':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[60,-50,60,60,60,60,60,60,-51,-54,-84,-85,-86,-87,60,-58,-88,-59,-60,-61,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,60,60,-38,60,60,60,-53,60,-47,60,60,60,-33,-45,-37,-41,-30,-36,60,60,60,60,-48,-34,-39,-42,60,-40,]),'INTEGER_LITERAL':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[68,-50,68,68,68,68,68,68,-51,-54,-84,-85,-86,-87,68,-58,-88,-59,-60,-61,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,68,68,-38,68,68,68,-53,68,-47,68,68,68,-33,-45,-37,-41,-30,-36,68,68,68,68,-48,-34,-39,-42,68,-40,]),'DOUBLE_LITERAL':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[69,-50,69,69,69,69,69,69,-51,-54,-84,-85,-86,-87,69,-58,-88,-59,-60,-61,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,69,69,-38,69,69,69,-53,69,-47,69,69,69,-33,-45,-37,-41,-30,-36,69,69,69,69,-48,-34,-39,-42,69,-40,]),'STRING_LITERAL':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[70,-50,70,70,70,70,70,70,-51,-54,-84,-85,-86,-87,70,-58,-88,-59,-60,-61,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,70,70,-38,70,70,70,-53,70,-47,70,70,70,-33,-45,-37,-41,-30,-36,70,70,70,70,-48,-34,-39,-42,70,-40,]),'TRUE':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[71,-50,71,71,71,71,71,71,-51,-54,-84,-85,-86,-87,71,-58,-88,-59,-60,-61,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,71,71,-38,71,71,71,-53,71,-47,71,71,71,-33,-45,-37,-41,-30,-36,71,71,71,71,-48,-34,-39,-42,71,-40,]),'FALSE':([47,51,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,137,140,141,142,143,144,145,146,148,150,154,155,156,157,158,160,161,162,164,165,166,],[72,-50,72,72,72,72,72,72,-51,-54,-84,-85,-86,-87,72,-58,-88,-59,-60,-61,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,72,72,-38,72,72,72,-53,72,-47,72,72,72,-33,-45,-37,-41,-30,-36,72,72,72,72,-48,-34,-39,-42,72,-40,]),'DOT':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,80,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,80,80,80,80,80,-52,80,-49,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-53,-47,80,80,80,80,80,-30,80,80,-48,80,80,80,80,80,]),'AND':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,81,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,81,81,-44,-45,-46,-52,81,-49,81,81,81,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,81,81,-53,-47,81,-45,81,81,81,-30,81,81,-48,81,81,81,81,81,]),'AND_ALT':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,82,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,82,82,-44,-45,-46,-52,82,-49,82,82,82,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,82,82,-53,-47,82,-45,82,82,82,-30,82,82,-48,82,82,82,82,82,]),'OR':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,83,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,83,83,-44,-45,-46,-52,83,-49,83,83,83,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,83,83,-53,-47,83,-45,83,83,83,-30,83,83,-48,83,83,83,83,83,]),'OR_ALT':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,84,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,84,84,-44,-45,-46,-52,84,-49,84,84,84,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,84,84,-53,-47,84,-45,84,84,84,-30,84,84,-48,84,84,84,84,84,]),'EQUAL':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,85,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,85,85,85,-45,-46,-52,85,-49,85,85,85,85,85,85,85,None,None,None,None,None,None,-79,-80,-81,-82,-83,85,85,-53,-47,85,-45,85,85,85,-30,85,85,-48,85,85,85,85,85,]),'DIFF':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,86,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,86,86,86,-45,-46,-52,86,-49,86,86,86,86,86,86,86,None,None,None,None,None,None,-79,-80,-81,-82,-83,86,86,-53,-47,86,-45,86,86,86,-30,86,86,-48,86,86,86,86,86,]),'LOWER':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,87,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,87,87,87,-45,-46,-52,87,-49,87,87,87,87,87,87,87,None,None,None,None,None,None,-79,-80,-81,-82,-83,87,87,-53,-47,87,-45,87,87,87,-30,87,87,-48,87,87,87,87,87,]),'LOWER_EQUAL':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,88,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,88,88,88,-45,-46,-52,88,-49,88,88,88,88,88,88,88,None,None,None,None,None,None,-79,-80,-81,-82,-83,88,88,-53,-47,88,-45,88,88,88,-30,88,88,-48,88,88,88,88,88,]),'GREATER':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,89,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,89,89,89,-45,-46,-52,89,-49,89,89,89,89,89,89,89,None,None,None,None,None,None,-79,-80,-81,-82,-83,89,89,-53,-47,89,-45,89,89,89,-30,89,89,-48,89,89,89,89,89,]),'GREATER_EQUAL':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,90,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,90,90,90,-45,-46,-52,90,-49,90,90,90,90,90,90,90,None,None,None,None,None,None,-79,-80,-81,-82,-83,90,90,-53,-47,90,-45,90,90,90,-30,90,90,-48,90,90,90,90,90,]),'PLUS':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,91,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,91,91,91,-45,-46,-52,91,-49,91,91,91,91,91,91,91,91,91,91,91,91,91,-79,-80,-81,-82,-83,91,91,-53,-47,91,-45,91,91,91,-30,91,91,-48,91,91,91,91,91,]),'TIMES':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,93,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,93,93,93,93,-46,-52,93,-49,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-81,-82,-83,93,93,-53,-47,93,93,93,93,93,-30,93,93,-48,93,93,93,93,93,]),'DIV':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,94,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,94,94,94,94,-46,-52,94,-49,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-81,-82,-83,94,94,-53,-47,94,94,94,94,94,-30,94,94,-48,94,94,94,94,94,]),'POW':([51,52,61,62,63,64,65,66,68,69,70,71,72,96,97,99,100,101,102,103,104,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,149,150,151,154,160,161,162,163,164,166,],[-50,95,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,95,95,95,95,95,-52,95,-49,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-53,-47,95,95,95,95,95,-30,95,95,-48,95,95,95,95,95,]),'THEN':([51,61,62,63,64,65,66,68,69,70,71,72,96,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,150,154,160,161,162,164,166,],[-50,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,128,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'DO':([51,61,62,63,64,65,66,68,69,70,71,72,97,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,150,154,160,161,162,164,166,],[-50,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,131,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-35,-38,-53,-47,-33,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),'ELSE':([51,61,62,63,64,65,66,68,69,70,71,72,99,100,101,102,104,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,135,140,144,145,146,148,150,154,160,161,162,164,166,],[-50,-51,-54,-84,-85,-86,-87,-58,-88,-59,-60,-61,-44,-45,-46,-52,-49,-43,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,143,-38,-53,-47,155,-45,-37,-41,-30,-36,-48,-34,-39,-42,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,5,]),'class':([0,2,],[2,2,]),'class_body':([3,4,6,19,28,29,],[7,15,17,30,44,45,]),'class_body_aux':([3,4,6,9,12,13,19,28,29,],[10,10,10,20,24,25,10,10,10,]),'empty':([3,4,6,9,19,27,28,29,50,78,105,141,142,151,],[11,11,11,21,11,42,11,11,42,109,138,109,109,138,]),'field':([3,4,6,9,12,13,19,28,29,],[12,12,12,12,12,12,12,12,12,]),'method':([3,4,6,9,12,13,19,28,29,],[13,13,13,13,13,13,13,13,13,]),'type':([26,48,74,132,],[33,73,106,147,]),'formals':([27,50,],[41,76,]),'formal':([27,50,],[43,43,]),'expr':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[52,96,97,99,100,101,103,105,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,144,145,146,148,149,151,110,110,154,161,162,163,164,166,]),'literal':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'block':([47,49,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,106,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[62,75,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,139,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'integer_literal':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'double_literal':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'string_literal':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'boolean_literal':([47,53,54,56,57,58,59,67,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,128,129,131,133,134,137,141,142,143,155,156,157,158,165,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'args':([78,141,142,],[108,152,153,]),'block_aux':([105,151,],[136,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class program','program',2,'p_program','parser.py',76),
  ('program -> class','program',1,'p_program','parser.py',77),
  ('class -> CLASS TYPE_IDENTIFIER class_body','class',3,'p_class','parser.py',84),
  ('class -> CLASS TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class_body','class',5,'p_class','parser.py',85),
  ('class -> TYPE_IDENTIFIER class_body','class',2,'p_class','parser.py',86),
  ('class -> TYPE_IDENTIFIER EXTENDS TYPE_IDENTIFIER class_body','class',4,'p_class','parser.py',87),
  ('class -> CLASS class_body','class',2,'p_class','parser.py',88),
  ('class -> CLASS EXTENDS TYPE_IDENTIFIER class_body','class',4,'p_class','parser.py',89),
  ('class_body -> LBRACE class_body_aux RBRACE','class_body',3,'p_class_body','parser.py',132),
  ('class_body -> LBRACE empty RBRACE','class_body',3,'p_class_body','parser.py',133),
  ('class_body -> class_body_aux RBRACE','class_body',2,'p_class_body','parser.py',134),
  ('class_body -> empty RBRACE','class_body',2,'p_class_body','parser.py',135),
  ('class_body -> LBRACE class_body_aux','class_body',2,'p_class_body','parser.py',136),
  ('class_body -> LBRACE empty','class_body',2,'p_class_body','parser.py',137),
  ('class_body_aux -> field class_body_aux','class_body_aux',2,'p_class_body_aux','parser.py',154),
  ('class_body_aux -> method class_body_aux','class_body_aux',2,'p_class_body_aux','parser.py',155),
  ('class_body_aux -> field','class_body_aux',1,'p_class_body_aux','parser.py',156),
  ('class_body_aux -> method','class_body_aux',1,'p_class_body_aux','parser.py',157),
  ('field -> OBJECT_IDENTIFIER COLON type SEMICOLON','field',4,'p_field','parser.py',173),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expr SEMICOLON','field',6,'p_field','parser.py',174),
  ('field -> OBJECT_IDENTIFIER COLON type','field',3,'p_field','parser.py',175),
  ('field -> OBJECT_IDENTIFIER COLON type ASSIGN expr','field',5,'p_field','parser.py',176),
  ('method -> OBJECT_IDENTIFIER LPAR formals RPAR COLON type block','method',7,'p_method','parser.py',197),
  ('method -> OBJECT_IDENTIFIER LPAR formals RPAR block','method',5,'p_method','parser.py',198),
  ('formals -> empty','formals',1,'p_formals','parser.py',232),
  ('formals -> formal','formals',1,'p_formals','parser.py',233),
  ('formals -> formal COMMA formals','formals',3,'p_formals','parser.py',234),
  ('formal -> OBJECT_IDENTIFIER COLON type','formal',3,'p_formal','parser.py',249),
  ('formal -> OBJECT_IDENTIFIER','formal',1,'p_formal','parser.py',250),
  ('block -> LBRACE expr block_aux RBRACE','block',4,'p_block','parser.py',266),
  ('block_aux -> SEMICOLON expr block_aux','block_aux',3,'p_block_aux','parser.py',291),
  ('block_aux -> empty','block_aux',1,'p_block_aux','parser.py',292),
  ('expr -> IF expr THEN expr','expr',4,'p_expr_if','parser.py',310),
  ('expr -> IF expr THEN expr ELSE expr','expr',6,'p_expr_if','parser.py',311),
  ('expr -> IF expr expr','expr',3,'p_expr_if','parser.py',312),
  ('expr -> IF expr expr ELSE expr','expr',5,'p_expr_if','parser.py',313),
  ('expr -> WHILE expr DO expr','expr',4,'p_expr_while','parser.py',334),
  ('expr -> WHILE expr expr','expr',3,'p_expr_while','parser.py',335),
  ('expr -> LET OBJECT_IDENTIFIER COLON type IN expr','expr',6,'p_expr_let','parser.py',351),
  ('expr -> LET OBJECT_IDENTIFIER COLON type ASSIGN expr IN expr','expr',8,'p_expr_let','parser.py',352),
  ('expr -> LET OBJECT_IDENTIFIER IN expr','expr',4,'p_expr_let','parser.py',353),
  ('expr -> LET OBJECT_IDENTIFIER ASSIGN expr IN expr','expr',6,'p_expr_let','parser.py',354),
  ('expr -> OBJECT_IDENTIFIER ASSIGN expr','expr',3,'p_expr_assign','parser.py',375),
  ('expr -> NOT expr','expr',2,'p_expr_unop','parser.py',387),
  ('expr -> MINUS expr','expr',2,'p_expr_unop','parser.py',388),
  ('expr -> ISNULL expr','expr',2,'p_expr_unop','parser.py',389),
  ('expr -> OBJECT_IDENTIFIER LPAR args RPAR','expr',4,'p_expr_call','parser.py',421),
  ('expr -> expr DOT OBJECT_IDENTIFIER LPAR args RPAR','expr',6,'p_expr_call','parser.py',422),
  ('expr -> NEW TYPE_IDENTIFIER','expr',2,'p_expr_new','parser.py',452),
  ('expr -> OBJECT_IDENTIFIER','expr',1,'p_expr_obj_id','parser.py',464),
  ('expr -> literal','expr',1,'p_expr_literal','parser.py',476),
  ('expr -> LPAR RPAR','expr',2,'p_expr_unit','parser.py',483),
  ('expr -> LPAR expr RPAR','expr',3,'p_expr_par','parser.py',495),
  ('expr -> block','expr',1,'p_expr_block','parser.py',502),
  ('args -> empty','args',1,'p_args','parser.py',509),
  ('args -> expr','args',1,'p_args','parser.py',510),
  ('args -> expr COMMA args','args',3,'p_args','parser.py',511),
  ('integer_literal -> INTEGER_LITERAL','integer_literal',1,'p_integer_literal','parser.py',535),
  ('string_literal -> STRING_LITERAL','string_literal',1,'p_string_literal','parser.py',547),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',559),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',560),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',572),
  ('type -> TYPE_IDENTIFIER','type',1,'p_type','parser.py',673),
  ('type -> INT32','type',1,'p_type','parser.py',674),
  ('type -> DOUBLE','type',1,'p_type','parser.py',675),
  ('type -> BOOL','type',1,'p_type','parser.py',676),
  ('type -> STRING','type',1,'p_type','parser.py',677),
  ('type -> UNIT','type',1,'p_type','parser.py',678),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',685),
  ('expr -> expr AND_ALT expr','expr',3,'p_expr_binop','parser.py',686),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',687),
  ('expr -> expr OR_ALT expr','expr',3,'p_expr_binop','parser.py',688),
  ('expr -> expr EQUAL expr','expr',3,'p_expr_binop','parser.py',689),
  ('expr -> expr DIFF expr','expr',3,'p_expr_binop','parser.py',690),
  ('expr -> expr LOWER expr','expr',3,'p_expr_binop','parser.py',691),
  ('expr -> expr LOWER_EQUAL expr','expr',3,'p_expr_binop','parser.py',692),
  ('expr -> expr GREATER expr','expr',3,'p_expr_binop','parser.py',693),
  ('expr -> expr GREATER_EQUAL expr','expr',3,'p_expr_binop','parser.py',694),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','parser.py',695),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','parser.py',696),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','parser.py',697),
  ('expr -> expr DIV expr','expr',3,'p_expr_binop','parser.py',698),
  ('expr -> expr POW expr','expr',3,'p_expr_binop','parser.py',699),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',711),
  ('literal -> double_literal','literal',1,'p_literal','parser.py',712),
  ('literal -> string_literal','literal',1,'p_literal','parser.py',713),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',714),
  ('double_literal -> DOUBLE_LITERAL','double_literal',1,'p_double_literal','parser.py',721),
]
